{
  "openapi": "3.1.0",
  "info": {
    "title": "Therapy Compliance Analyzer API",
    "description": "\n        # \ud83c\udfe5 Therapy Compliance Analyzer API\n\n        A comprehensive API for analyzing clinical documentation compliance with Medicare and regulatory guidelines.\n\n        ## Features\n\n        - **Document Analysis**: Upload and analyze PDF, DOCX, and TXT documents\n        - **Compliance Scoring**: AI-powered compliance analysis with confidence scores\n        - **Real-time Progress**: WebSocket-based progress tracking\n        - **User Management**: Secure authentication and user management\n        - **Analytics**: Comprehensive reporting and analytics\n        - **Health Monitoring**: System health and performance monitoring\n\n        ## Authentication\n\n        This API uses JWT-based authentication. Include the token in the Authorization header:\n\n        ```\n        Authorization: Bearer <your-jwt-token>\n        ```\n\n        ## Rate Limiting\n\n        API requests are rate-limited to 100 requests per minute per IP address.\n\n        ## Error Handling\n\n        The API returns detailed error information including:\n        - Error ID for tracking\n        - User-friendly error messages\n        - Suggested solutions\n        - Debug information (in development mode)\n\n        ## WebSocket Support\n\n        Real-time updates are available via WebSocket connections for:\n        - Analysis progress tracking\n        - System health monitoring\n        - Live log streaming\n        ",
    "version": "1.0.0",
    "contact": {
      "name": "Therapy Compliance Analyzer Support",
      "email": "support@therapyanalyzer.com",
      "url": "https://therapyanalyzer.com/support"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://therapyanalyzer.com/license"
    }
  },
  "paths": {
    "/health/system": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Get System Health",
        "description": "Return local system telemetry for status bar displays.",
        "operationId": "get_system_health_health_system_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ai/status": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Get Ai Status",
        "description": "Get AI model status",
        "operationId": "get_ai_status_ai_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/cleanup/health": {
      "get": {
        "tags": [
          "Cleanup",
          "Cleanup"
        ],
        "summary": "Get Cleanup Health",
        "description": "Get health status of all cleanup services.",
        "operationId": "get_cleanup_health_cleanup_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/cleanup/stats": {
      "get": {
        "tags": [
          "Cleanup",
          "Cleanup"
        ],
        "summary": "Get Cleanup Stats",
        "description": "Get statistics for all cleanup services.",
        "operationId": "get_cleanup_stats_cleanup_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/cleanup/run": {
      "post": {
        "tags": [
          "Cleanup",
          "Cleanup"
        ],
        "summary": "Run Cleanup Now",
        "description": "Run cleanup immediately for specified service or all services.",
        "operationId": "run_cleanup_now_cleanup_run_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cleanup/start": {
      "post": {
        "tags": [
          "Cleanup",
          "Cleanup"
        ],
        "summary": "Start Cleanup Services",
        "description": "Start all cleanup services.",
        "operationId": "start_cleanup_services_cleanup_start_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/cleanup/stop": {
      "post": {
        "tags": [
          "Cleanup",
          "Cleanup"
        ],
        "summary": "Stop Cleanup Services",
        "description": "Stop all cleanup services.",
        "operationId": "stop_cleanup_services_cleanup_stop_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/performance/health": {
      "get": {
        "tags": [
          "Performance",
          "performance"
        ],
        "summary": "Health Check",
        "description": "Basic health check endpoint - PUBLIC (no auth required for monitoring).",
        "operationId": "health_check_performance_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Performance Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/performance/metrics": {
      "get": {
        "tags": [
          "Performance",
          "performance"
        ],
        "summary": "Get Performance Metrics",
        "description": "Get comprehensive performance metrics - AUTHENTICATED USER REQUIRED.",
        "operationId": "get_performance_metrics_performance_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Performance Metrics Performance Metrics Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/performance/config": {
      "get": {
        "tags": [
          "Performance",
          "performance"
        ],
        "summary": "Get Configuration Summary",
        "description": "Get configuration summary - AUTHENTICATED USER REQUIRED.",
        "operationId": "get_configuration_summary_performance_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Configuration Summary Performance Config Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/performance/reset-metrics": {
      "post": {
        "tags": [
          "Performance",
          "performance"
        ],
        "summary": "Reset Performance Metrics",
        "description": "Reset performance metrics - AUTHENTICATED USER REQUIRED.",
        "operationId": "reset_performance_metrics_performance_reset_metrics_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Reset Performance Metrics Performance Reset Metrics Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/health/": {
      "get": {
        "tags": [
          "Health",
          "Health"
        ],
        "summary": "Health Check",
        "description": "Basic health check endpoint.",
        "operationId": "health_check_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health/detailed": {
      "get": {
        "tags": [
          "Health",
          "Health"
        ],
        "summary": "Detailed Health Check",
        "description": "Detailed health check with all metrics.",
        "operationId": "detailed_health_check_health_detailed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "Health",
          "Health"
        ],
        "summary": "Readiness Check",
        "description": "Kubernetes-style readiness probe.",
        "operationId": "readiness_check_health_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health/live": {
      "get": {
        "tags": [
          "Health",
          "Health"
        ],
        "summary": "Liveness Check",
        "description": "Kubernetes-style liveness probe.",
        "operationId": "liveness_check_health_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication",
          "auth"
        ],
        "summary": "Register User",
        "description": "Register a new user and return basic user info.",
        "operationId": "register_user_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": [
          "Authentication",
          "auth"
        ],
        "summary": "Login For Access Token",
        "description": "Authenticate user and generate JWT access token (OAuth2 compatible) with session creation.",
        "operationId": "login_for_access_token_auth_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_auth_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication",
          "auth"
        ],
        "summary": "Login",
        "description": "Authenticate via form or JSON payload, maintaining backward compatibility.",
        "operationId": "login_auth_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/auth/json-login": {
      "post": {
        "tags": [
          "Authentication",
          "auth"
        ],
        "summary": "Json Login",
        "description": "JSON-compatible login endpoint for Electron app and modern clients.",
        "operationId": "json_login_auth_json_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/change-password": {
      "post": {
        "tags": [
          "Authentication",
          "auth"
        ],
        "summary": "Change Password",
        "description": "Change password for the current user.",
        "operationId": "change_password_auth_users_change_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sessions/create": {
      "post": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Create Session",
        "description": "Create a new session for the current user.",
        "operationId": "create_session_sessions_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sessions/refresh/{session_id}": {
      "post": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Refresh Session",
        "description": "Refresh a session to extend its expiration.",
        "operationId": "refresh_session_sessions_refresh__session_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Refresh Session Sessions Refresh  Session Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{session_id}": {
      "delete": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Invalidate Session",
        "description": "Invalidate a specific session.",
        "operationId": "invalidate_session_sessions__session_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Invalidate Session Sessions  Session Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/all": {
      "delete": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Invalidate All Sessions",
        "description": "Invalidate all sessions for the current user.",
        "operationId": "invalidate_all_sessions_sessions_all_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Invalidate All Sessions Sessions All Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sessions/my-sessions": {
      "get": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Get My Sessions",
        "description": "Get all active sessions for the current user.",
        "operationId": "get_my_sessions_sessions_my_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SessionResponse"
                  },
                  "type": "array",
                  "title": "Response Get My Sessions Sessions My Sessions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sessions/stats": {
      "get": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Get Session Stats",
        "description": "Get session statistics (admin only).",
        "operationId": "get_session_stats_sessions_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sessions/validate/{session_id}": {
      "post": {
        "tags": [
          "Sessions",
          "sessions"
        ],
        "summary": "Validate Session",
        "description": "Validate a session (public endpoint for session validation).",
        "operationId": "validate_session_sessions_validate__session_id__post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Validate Session Sessions Validate  Session Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dashboard": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Admin Dashboard",
        "operationId": "get_admin_dashboard_admin_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/settings": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Current Settings",
        "description": "Endpoint to get the current, non-sensitive application settings.",
        "operationId": "get_current_settings_admin_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Current Settings Admin Settings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Update Settings",
        "description": "Endpoint to validate and save new application settings.",
        "operationId": "update_settings_admin_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "New Settings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Read Users",
        "operationId": "read_users_admin_users_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "title": "Response Read Users Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create User",
        "operationId": "create_user_admin_users_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}/activate": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Activate User",
        "operationId": "activate_user_admin_users__user_id__activate_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}/deactivate": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Deactivate User",
        "operationId": "deactivate_user_admin_users__user_id__deactivate_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/analyze": {
      "post": {
        "tags": [
          "Analysis",
          "analysis"
        ],
        "summary": "Analyze Document",
        "description": "Upload and analyze a clinical document for compliance from in-memory content with request tracking.",
        "operationId": "analyze_document_analysis_analyze_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_document_analysis_analyze_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Analyze Document Analysis Analyze Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analysis/start": {
      "post": {
        "tags": [
          "Analysis",
          "analysis"
        ],
        "summary": "Start Analysis",
        "description": "Start an analysis job - validates inputs and returns proper error codes for security testing.",
        "operationId": "start_analysis_analysis_start_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_start_analysis_analysis_start_post"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Start Analysis Analysis Start Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/status/{task_id}": {
      "get": {
        "tags": [
          "Analysis",
          "analysis"
        ],
        "summary": "Get Analysis Status",
        "description": "Retrieves the status of a background analysis task (user must own the task) with request tracking.",
        "operationId": "get_analysis_status_analysis_status__task_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Analysis Status Analysis Status  Task Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/all-tasks": {
      "get": {
        "tags": [
          "Analysis",
          "analysis"
        ],
        "summary": "Get All Tasks",
        "description": "Retrieves all current analysis tasks.",
        "operationId": "get_all_tasks_analysis_all_tasks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "object",
                  "title": "Response Get All Tasks Analysis All Tasks Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analysis/export-pdf/{task_id}": {
      "post": {
        "tags": [
          "Analysis",
          "analysis"
        ],
        "summary": "Export Report To Pdf",
        "description": "Export analysis report to PDF format.",
        "operationId": "export_report_to_pdf_analysis_export_pdf__task_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Export Report To Pdf Analysis Export Pdf  Task Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/feedback": {
      "post": {
        "tags": [
          "Analysis",
          "analysis"
        ],
        "summary": "Submit Feedback",
        "description": "Endpoint to receive and store user feedback on AI findings.",
        "operationId": "submit_feedback_analysis_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackAnnotationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackAnnotation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/upload-document": {
      "post": {
        "tags": [
          "Analysis Legacy",
          "analysis-legacy"
        ],
        "summary": "Legacy Upload Document",
        "description": "Legacy-friendly endpoint to upload documents with secure encryption.",
        "operationId": "legacy_upload_document_upload_document_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_legacy_upload_document_upload_document_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Legacy Upload Document Upload Document Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/documents/{document_id}": {
      "get": {
        "tags": [
          "Analysis Legacy",
          "analysis-legacy"
        ],
        "summary": "Legacy Get Document",
        "description": "Retrieve document metadata and content.",
        "operationId": "legacy_get_document_documents__document_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Legacy Get Document Documents  Document Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analyze": {
      "post": {
        "tags": [
          "Analysis Legacy",
          "analysis-legacy"
        ],
        "summary": "Legacy Start Analysis",
        "description": "Kick off an analysis job using a previously uploaded document.",
        "operationId": "legacy_start_analysis_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Legacy Start Analysis Analyze Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analysis-status/{task_id}": {
      "get": {
        "tags": [
          "Analysis Legacy",
          "analysis-legacy"
        ],
        "summary": "Legacy Get Analysis Status",
        "description": "Expose task status without the /analysis prefix for older clients.",
        "operationId": "legacy_get_analysis_status_analysis_status__task_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Legacy Get Analysis Status Analysis Status  Task Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/export-pdf/{task_id}": {
      "post": {
        "tags": [
          "Analysis Legacy",
          "analysis-legacy"
        ],
        "summary": "Legacy Export Report",
        "description": "Export analysis report to PDF for legacy clients.",
        "operationId": "legacy_export_report_export_pdf__task_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Legacy Export Report Export Pdf  Task Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/statistics": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Dashboard Statistics",
        "description": "Provides aggregated data for the main dashboard widget.",
        "operationId": "get_dashboard_statistics_dashboard_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Dashboard Statistics Dashboard Statistics Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/dashboard/overview": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Dashboard Overview",
        "description": "Provides a comprehensive overview for the mission control dashboard.",
        "operationId": "get_dashboard_overview_dashboard_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/dashboard/reports": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Read Reports",
        "operationId": "read_reports_dashboard_reports_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  },
                  "title": "Response Read Reports Dashboard Reports Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/reports/{report_id}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Read Report",
        "operationId": "read_report_dashboard_reports__report_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/findings-summary": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Read Findings Summary",
        "operationId": "read_findings_summary_dashboard_findings_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FindingSummary"
                  },
                  "type": "array",
                  "title": "Response Read Findings Summary Dashboard Findings Summary Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/dashboard/director-dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Director Dashboard Data",
        "description": "Provides aggregated analytics data for the director's dashboard.",
        "operationId": "get_director_dashboard_data_dashboard_director_dashboard_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "discipline",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Discipline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectorDashboardData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/coaching-focus": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Generate Coaching Focus",
        "description": "Generates an AI-powered weekly coaching focus based on team analytics.",
        "operationId": "generate_coaching_focus_dashboard_coaching_focus_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectorDashboardData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoachingFocus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/dashboard/habit-trends": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Habit Trends",
        "description": "Provide habit trend analysis data over time.",
        "operationId": "get_habit_trends_dashboard_habit_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HabitTrendPoint"
                  },
                  "title": "Response Get Habit Trends Dashboard Habit Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chat/": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Chat With Ai",
        "description": "Handles a conversational chat request with the AI.",
        "operationId": "chat_with_ai_chat__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/compliance/rubrics": {
      "get": {
        "tags": [
          "Compliance",
          "Compliance"
        ],
        "summary": "Get Rubrics",
        "description": "Get available compliance rubrics",
        "operationId": "get_rubrics_compliance_rubrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/compliance/evaluate": {
      "post": {
        "tags": [
          "Compliance",
          "Compliance"
        ],
        "summary": "Evaluate Document",
        "operationId": "evaluate_document_compliance_evaluate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TherapyDocumentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/progression": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get Habit Progression",
        "description": "Get comprehensive habit progression data for the current user.\n\nReturns personal growth journey including:\n- Habit mastery levels\n- Weekly trends and improvement rate\n- Current streak and consistency score\n- Achievements and goals\n- Personalized recommendations",
        "operationId": "get_habit_progression_habits_progression_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "Days to analyze (7-365)",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze (7-365)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HabitProgressData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/summary": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get Progress Summary",
        "description": "Get a quick summary of user's habit progress.\n\nReturns high-level metrics for dashboard widgets.",
        "operationId": "get_progress_summary_habits_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProgressSummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/habits/goals": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get User Goals",
        "description": "Get user's habit goals.",
        "operationId": "get_user_goals_habits_goals_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return only active goals",
              "default": true,
              "title": "Active Only"
            },
            "description": "Return only active goals"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HabitGoal"
                  },
                  "title": "Response Get User Goals Habits Goals Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Create Goal",
        "description": "Create a new habit goal for the user.",
        "operationId": "create_goal_habits_goals_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HabitGoalCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HabitGoal"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/goals/{goal_id}/progress": {
      "put": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Update Goal Progress",
        "description": "Update progress on a habit goal.",
        "operationId": "update_goal_progress_habits_goals__goal_id__progress_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          },
          {
            "name": "progress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 0,
              "description": "Progress percentage (0-100)",
              "title": "Progress"
            },
            "description": "Progress percentage (0-100)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HabitGoal"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/achievements": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get User Achievements",
        "description": "Get user's habit achievements.",
        "operationId": "get_user_achievements_habits_achievements_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HabitAchievement"
                  },
                  "type": "array",
                  "title": "Response Get User Achievements Habits Achievements Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/habits/weekly-trends": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get Weekly Trends",
        "description": "Get weekly habit trend data for visualization.",
        "operationId": "get_weekly_trends_habits_weekly_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "weeks_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 52,
              "minimum": 4,
              "description": "Number of weeks to analyze",
              "default": 12,
              "title": "Weeks Back"
            },
            "description": "Number of weeks to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeeklyHabitTrend"
                  },
                  "title": "Response Get Weekly Trends Habits Weekly Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/recommendations": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get Habit Recommendations",
        "description": "Get personalized habit recommendations.",
        "operationId": "get_habit_recommendations_habits_recommendations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HabitRecommendation"
                  },
                  "type": "array",
                  "title": "Response Get Habit Recommendations Habits Recommendations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/habits/habit-details/{habit_number}": {
      "get": {
        "tags": [
          "Habits",
          "Habits"
        ],
        "summary": "Get Habit Details",
        "description": "Get detailed information about a specific habit.",
        "operationId": "get_habit_details_habits_habit_details__habit_number__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "habit_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 7,
              "minimum": 1,
              "description": "Habit number (1-7)",
              "title": "Habit Number"
            },
            "description": "Habit number (1-7)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Habit Details Habits Habit Details  Habit Number  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/custom": {
      "post": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Custom Analytics",
        "description": "Get custom analytics data based on user-defined parameters.\n\nArgs:\n    request: Custom analytics request\n    current_user: Current authenticated user\n    db: Database session\n\nReturns:\n    Custom analytics data",
        "operationId": "get_custom_analytics_analytics_custom_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analytics/performance": {
      "get": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Performance Analytics",
        "description": "Get detailed performance analytics.\n\nArgs:\n    time_range: Time range for analytics\n    current_user: Current authenticated user\n    db: Database session\n\nReturns:\n    Performance analytics data",
        "operationId": "get_performance_analytics_analytics_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range for performance data",
              "default": "30d",
              "title": "Time Range"
            },
            "description": "Time range for performance data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Performance Analytics Analytics Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/dashboard-config": {
      "get": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Dashboard Configuration",
        "description": "Get customizable dashboard configuration.\n\nArgs:\n    current_user: Current authenticated user\n\nReturns:\n    Dashboard configuration data",
        "operationId": "get_dashboard_configuration_analytics_dashboard_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Dashboard Configuration Analytics Dashboard Config Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analytics/export": {
      "post": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Export Analytics Data",
        "description": "Export analytics data in various formats.\n\nArgs:\n    request: Analytics request\n    format: Export format\n    current_user: Current authenticated user\n    db: Database session\n\nReturns:\n    Export information and download URL",
        "operationId": "export_analytics_data_analytics_export_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format (json, csv, pdf)",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format (json, csv, pdf)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Export Analytics Data Analytics Export Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/advanced": {
      "get": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Advanced Analytics",
        "description": "Get advanced analytics data including trends and key metrics.\n\nProvides comprehensive compliance analytics with:\n- Compliance trends over time\n- Key performance metrics\n- Category breakdown analysis",
        "operationId": "get_advanced_analytics_analytics_advanced_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range for analysis",
              "default": "Last 30 Days",
              "title": "Time Range"
            },
            "description": "Time range for analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Advanced Analytics Analytics Advanced Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/predictive": {
      "get": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Predictive Analytics",
        "description": "Get predictive analytics including risk forecasts and AI recommendations.\n\nProvides AI-powered predictions for:\n- Compliance forecasts\n- Risk factor analysis\n- Actionable recommendations",
        "operationId": "get_predictive_analytics_analytics_predictive_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Predictive Analytics Analytics Predictive Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analytics/benchmarks": {
      "get": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Benchmark Analytics",
        "description": "Get benchmark comparison data against industry standards.\n\nProvides performance comparisons including:\n- Industry averages\n- Your performance metrics\n- Percentile rankings\n- Top performer benchmarks",
        "operationId": "get_benchmark_analytics_analytics_benchmarks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Benchmark Analytics Analytics Benchmarks Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analytics/risk-assessment": {
      "get": {
        "tags": [
          "Advanced Analytics",
          "Advanced Analytics"
        ],
        "summary": "Get Risk Assessment",
        "description": "Get comprehensive risk assessment and mitigation strategies.\n\nProvides detailed risk analysis including:\n- Current risk levels\n- Risk factor breakdown\n- Mitigation strategies\n- Action plans",
        "operationId": "get_risk_assessment_analytics_risk_assessment_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Risk Assessment Analytics Risk Assessment Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/meta-analytics/widget_data": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Widget Meta Analytics Data",
        "description": "Get comprehensive organizational analytics overview for the MetaAnalyticsWidget.\n\n**Admin Only**",
        "operationId": "get_widget_meta_analytics_data_meta_analytics_widget_data_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "Days to analyze (7-365)",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze (7-365)"
          },
          {
            "name": "discipline",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by discipline (PT, OT, SLP)",
              "title": "Discipline"
            },
            "description": "Filter by discipline (PT, OT, SLP)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Widget Meta Analytics Data Meta Analytics Widget Data Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/organizational-overview": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Organizational Overview",
        "description": "Get comprehensive organizational analytics overview.\n\n**Admin Only** - Provides team-wide insights including:\n- Overall team performance metrics\n- Discipline-specific breakdowns\n- Team habit distribution\n- Training needs identification\n- Performance trends over time",
        "operationId": "get_organizational_overview_meta_analytics_organizational_overview_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "Days to analyze (7-365)",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze (7-365)"
          },
          {
            "name": "discipline",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by discipline (PT, OT, SLP)",
              "title": "Discipline"
            },
            "description": "Filter by discipline (PT, OT, SLP)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Organizational Overview Meta Analytics Organizational Overview Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/training-needs": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Training Needs",
        "description": "Identify organizational training needs based on habit patterns.\n\n**Admin Only** - Analyzes team-wide findings to identify:\n- Habits requiring focused training\n- Number of users affected\n- Priority levels and recommendations\n- Specific training strategies",
        "operationId": "get_training_needs_meta_analytics_training_needs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 30,
              "description": "Days to analyze",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze"
          },
          {
            "name": "discipline",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by discipline",
              "title": "Discipline"
            },
            "description": "Filter by discipline"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Training Needs Meta Analytics Training Needs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/team-trends": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Team Trends",
        "description": "Get team-wide performance trends over time.\n\n**Admin Only** - Provides weekly trend data for:\n- Team compliance scores\n- Total findings and analyses\n- Habit distribution changes\n- Performance trajectory",
        "operationId": "get_team_trends_meta_analytics_team_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "weeks_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 52,
              "minimum": 4,
              "description": "Number of weeks to analyze",
              "default": 12,
              "title": "Weeks Back"
            },
            "description": "Number of weeks to analyze"
          },
          {
            "name": "discipline",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by discipline",
              "title": "Discipline"
            },
            "description": "Filter by discipline"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Team Trends Meta Analytics Team Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/benchmarks": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Benchmarks",
        "description": "Get organizational benchmarking data.\n\n**Admin Only** - Provides percentile data for:\n- Compliance score distribution\n- Findings per user distribution\n- Analysis frequency distribution\n- Performance benchmarks",
        "operationId": "get_benchmarks_meta_analytics_benchmarks_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 30,
              "description": "Days to analyze",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Benchmarks Meta Analytics Benchmarks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/peer-comparison/{user_id}": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Peer Comparison",
        "description": "Get anonymous peer comparison data for a specific user.\n\n**Admin Only** - Provides anonymous comparison including:\n- User's performance vs team averages\n- Percentile rankings\n- Comparison insights and recommendations",
        "operationId": "get_peer_comparison_meta_analytics_peer_comparison__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 30,
              "description": "Days to analyze",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Peer Comparison Meta Analytics Peer Comparison  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/discipline-comparison": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Discipline Comparison",
        "description": "Compare performance across therapy disciplines.\n\n**Admin Only** - Provides discipline comparison including:\n- PT vs OT vs SLP performance metrics\n- Discipline-specific habit patterns\n- Training needs by discipline\n- Best practices identification",
        "operationId": "get_discipline_comparison_meta_analytics_discipline_comparison_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 30,
              "description": "Days to analyze",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Discipline Comparison Meta Analytics Discipline Comparison Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/meta-analytics/performance-alerts": {
      "get": {
        "tags": [
          "Meta Analytics",
          "Meta Analytics"
        ],
        "summary": "Get Performance Alerts",
        "description": "Get performance alerts and recommendations for immediate action.\n\n**Admin Only** - Identifies urgent issues requiring attention:\n- Declining performance trends\n- Critical training needs\n- Users requiring intervention\n- System-wide concerns",
        "operationId": "get_performance_alerts_meta_analytics_performance_alerts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Performance Alerts Meta Analytics Performance Alerts Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedback/submit": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Submit Feedback",
        "description": "Submit feedback for an analysis.\n\nArgs:\n    request: Feedback submission request\n    current_user: Current authenticated user\n    feedback_system: Feedback system instance\n\nReturns:\n    Feedback submission response",
        "operationId": "submit_feedback_feedback_submit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/src__api__routers__feedback__FeedbackSubmissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedback/analysis/{analysis_id}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Get Feedback For Analysis",
        "description": "Get all feedback for a specific analysis.\n\nArgs:\n    analysis_id: Analysis ID\n    current_user: Current authenticated user\n    feedback_system: Feedback system instance\n\nReturns:\n    List of feedback items",
        "operationId": "get_feedback_for_analysis_feedback_analysis__analysis_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "analysis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analysis Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackItemResponse"
                  },
                  "title": "Response Get Feedback For Analysis Feedback Analysis  Analysis Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/process/{feedback_id}": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Process Feedback",
        "description": "Process a specific feedback item.\n\nArgs:\n    feedback_id: Feedback ID to process\n    processing_notes: Optional processing notes\n    current_user: Current authenticated user\n    feedback_system: Feedback system instance\n\nReturns:\n    Processing response",
        "operationId": "process_feedback_feedback_process__feedback_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feedback Id"
            }
          },
          {
            "name": "processing_notes",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Processing Notes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/analytics": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Get Feedback Analytics",
        "description": "Get feedback analytics for a date range.\n\nArgs:\n    start_date: Start date in ISO format\n    end_date: End date in ISO format\n    current_user: Current authenticated user\n    feedback_system: Feedback system instance\n\nReturns:\n    Feedback analytics data",
        "operationId": "get_feedback_analytics_feedback_analytics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/stats": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Get Feedback Stats",
        "description": "Get current feedback statistics.\n\nArgs:\n    current_user: Current authenticated user\n    feedback_system: Feedback system instance\n\nReturns:\n    Feedback statistics",
        "operationId": "get_feedback_stats_feedback_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Feedback Stats Feedback Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedback/cleanup": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Cleanup Old Feedback",
        "description": "Clean up old feedback data.\n\nArgs:\n    current_user: Current authenticated user\n    feedback_system: Feedback system instance\n\nReturns:\n    Cleanup results",
        "operationId": "cleanup_old_feedback_feedback_cleanup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Cleanup Old Feedback Feedback Cleanup Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/feedback/types": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Get Feedback Types",
        "description": "Get available feedback types and priorities.\n\nReturns:\n    Available feedback types and priorities",
        "operationId": "get_feedback_types_feedback_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Get Feedback Types Feedback Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/education/learning-paths": {
      "post": {
        "tags": [
          "education"
        ],
        "summary": "Create Learning Path",
        "description": "Create a personalized learning path for a user.\n\nArgs:\n    request: Learning path creation request\n    current_user: Current authenticated user\n    education_engine: Education engine instance\n\nReturns:\n    Created learning path",
        "operationId": "create_learning_path_education_learning_paths_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/src__api__routers__education__LearningPathRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningPathResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/education/sessions": {
      "post": {
        "tags": [
          "education"
        ],
        "summary": "Start Learning Session",
        "description": "Start a learning session for a user.\n\nArgs:\n    request: Learning session request\n    current_user: Current authenticated user\n    education_engine: Education engine instance\n\nReturns:\n    Learning session information",
        "operationId": "start_learning_session_education_sessions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/education/sessions/{progress_id}/complete": {
      "post": {
        "tags": [
          "education"
        ],
        "summary": "Complete Learning Session",
        "description": "Complete a learning session.\n\nArgs:\n    progress_id: Progress ID\n    request: Completion request\n    current_user: Current authenticated user\n    education_engine: Education engine instance\n\nReturns:\n    Completion confirmation",
        "operationId": "complete_learning_session_education_sessions__progress_id__complete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "progress_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Progress Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningCompletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Complete Learning Session Education Sessions  Progress Id  Complete Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/education/assessments": {
      "post": {
        "tags": [
          "education"
        ],
        "summary": "Assess Competency",
        "description": "Assess user competency in a specific area.\n\nArgs:\n    request: Competency assessment request\n    current_user: Current authenticated user\n    education_engine: Education engine instance\n\nReturns:\n    Competency assessment result",
        "operationId": "assess_competency_education_assessments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompetencyAssessmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompetencyAssessmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/education/recommendations": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Learning Recommendations",
        "description": "Get personalized learning recommendations for a user.\n\nArgs:\n    analysis_findings: Optional JSON string of analysis findings\n    current_user: Current authenticated user\n    education_engine: Education engine instance\n\nReturns:\n    List of recommended educational content",
        "operationId": "get_learning_recommendations_education_recommendations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "analysis_findings",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Analysis Findings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Learning Recommendations Education Recommendations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/education/dashboard": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Learning Dashboard",
        "description": "Get comprehensive learning dashboard for a user.\n\nArgs:\n    current_user: Current authenticated user\n    education_engine: Education engine instance\n\nReturns:\n    Learning dashboard data",
        "operationId": "get_learning_dashboard_education_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningDashboardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/education/content": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Educational Content",
        "description": "Get educational content with optional filters.\n\nArgs:\n    competency_area: Filter by competency area\n    content_type: Filter by content type\n    difficulty_level: Filter by difficulty level\n    education_engine: Education engine instance\n\nReturns:\n    List of educational content",
        "operationId": "get_educational_content_education_content_get",
        "parameters": [
          {
            "name": "competency_area",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Competency Area"
            }
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Type"
            }
          },
          {
            "name": "difficulty_level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Difficulty Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Educational Content Education Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/education/stats": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Education Stats",
        "description": "Get overall education system statistics.\n\nArgs:\n    education_engine: Education engine instance\n\nReturns:\n    Education system statistics",
        "operationId": "get_education_stats_education_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Education Stats Education Stats Get"
                }
              }
            }
          }
        }
      }
    },
    "/education/competency-areas": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Competency Areas",
        "description": "Get available competency areas.\n\nReturns:\n    List of competency areas",
        "operationId": "get_competency_areas_education_competency_areas_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Competency Areas Education Competency Areas Get"
                }
              }
            }
          }
        }
      }
    },
    "/education/content-types": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Content Types",
        "description": "Get available content types.\n\nReturns:\n    List of content types",
        "operationId": "get_content_types_education_content_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Content Types Education Content Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/education/learning-levels": {
      "get": {
        "tags": [
          "education"
        ],
        "summary": "Get Learning Levels",
        "description": "Get available learning levels.\n\nReturns:\n    List of learning levels",
        "operationId": "get_learning_levels_education_learning_levels_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Learning Levels Education Learning Levels Get"
                }
              }
            }
          }
        }
      }
    },
    "/security/status": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Get Security Status",
        "description": "Get current security status.",
        "operationId": "get_security_status_security_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/security/threat-detection": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Detect Threats",
        "description": "Detect threats in provided data.",
        "operationId": "detect_threats_security_threat_detection_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreatDetectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatDetectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/security/password-strength": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Validate Password Strength Endpoint",
        "description": "Validate password strength.",
        "operationId": "validate_password_strength_endpoint_security_password_strength_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordStrengthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordStrengthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/security/log-event": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Log Security Event",
        "description": "Log a security event.",
        "operationId": "log_security_event_security_log_event_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/security/config": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Get Security Config Endpoint",
        "description": "Get security configuration.",
        "operationId": "get_security_config_endpoint_security_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/security/generate-token": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Generate Security Token",
        "description": "Generate a secure token.",
        "operationId": "generate_security_token_security_generate_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Current User",
        "description": "Get the current user's information.",
        "operationId": "get_current_user_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/me/password": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Current User Password",
        "description": "Allows the currently logged-in user to change their password.",
        "operationId": "update_current_user_password_users_me_password_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "Provide a basic authenticated endpoint for user listings used by integration tests.",
        "operationId": "list_users_users__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/preferences/me": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "Get User Preferences",
        "description": "Return the authenticated user's persisted application preferences.",
        "operationId": "get_user_preferences_preferences_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferences"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Preferences"
        ],
        "summary": "Update User Preferences",
        "description": "Persist updated user preferences after validating strictness selections.",
        "operationId": "update_user_preferences_preferences_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferences"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/rubrics/": {
      "post": {
        "tags": [
          "Rubrics",
          "rubrics"
        ],
        "summary": "Create Rubric",
        "operationId": "create_rubric_rubrics__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RubricCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RubricPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Rubrics",
          "rubrics"
        ],
        "summary": "Read Rubrics",
        "operationId": "read_rubrics_rubrics__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RubricListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/rubrics/{rubric_id}": {
      "get": {
        "tags": [
          "Rubrics",
          "rubrics"
        ],
        "summary": "Read Rubric",
        "operationId": "read_rubric_rubrics__rubric_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rubric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rubric Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RubricPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rubrics",
          "rubrics"
        ],
        "summary": "Update Rubric",
        "operationId": "update_rubric_rubrics__rubric_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rubric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rubric Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RubricCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RubricPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rubrics",
          "rubrics"
        ],
        "summary": "Delete Rubric",
        "operationId": "delete_rubric_rubrics__rubric_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "rubric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rubric Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RubricPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/individual/profile": {
      "get": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Get Personal Habit Profile",
        "description": "Get comprehensive personal habit profile for the current user.\n\nReturns detailed habit progression, achievements, streaks, and\npersonalized recommendations based on the user's analysis history.",
        "operationId": "get_personal_habit_profile_habits_individual_profile_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "Days to analyze (7-365)",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze (7-365)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Personal Habit Profile Habits Individual Profile Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/individual/timeline/{habit_id}": {
      "get": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Get Habit Timeline",
        "description": "Get detailed timeline for a specific habit.\n\nShows daily breakdown of findings, compliance scores, and progress\nfor the specified habit over the requested time period.",
        "operationId": "get_habit_timeline_habits_individual_timeline__habit_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "habit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Habit Id"
            }
          },
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 7,
              "description": "Days to analyze (7-90)",
              "default": 30,
              "title": "Days Back"
            },
            "description": "Days to analyze (7-90)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Habit Timeline Habits Individual Timeline  Habit Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/individual/goals": {
      "get": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Get Personal Goals",
        "description": "Get user's personal habit improvement goals.",
        "operationId": "get_personal_goals_habits_individual_goals_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return only active goals",
              "default": true,
              "title": "Active Only"
            },
            "description": "Return only active goals"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Personal Goals Habits Individual Goals Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Create Personal Goal",
        "description": "Create a new personal habit improvement goal.\n\nExpected goal_data format:\n{\n    \"habit_id\": \"habit_1\",\n    \"goal_type\": \"reduce_findings\",\n    \"target_value\": 5.0,\n    \"target_date\": \"2025-03-01T00:00:00Z\"\n}",
        "operationId": "create_personal_goal_habits_individual_goals_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Goal Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Personal Goal Habits Individual Goals Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/individual/achievements": {
      "get": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Get Personal Achievements",
        "description": "Get user's personal achievements and badges.",
        "operationId": "get_personal_achievements_habits_individual_achievements_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by achievement category",
              "title": "Category"
            },
            "description": "Filter by achievement category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Personal Achievements Habits Individual Achievements Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/individual/statistics": {
      "get": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Get Personal Statistics",
        "description": "Get comprehensive personal habit statistics.",
        "operationId": "get_personal_statistics_habits_individual_statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "Days to analyze (7-365)",
              "default": 90,
              "title": "Days Back"
            },
            "description": "Days to analyze (7-365)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Personal Statistics Habits Individual Statistics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/habits/individual/habits-info": {
      "get": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Get All Habits Info",
        "description": "Get information about all 7 habits for reference.",
        "operationId": "get_all_habits_info_habits_individual_habits_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get All Habits Info Habits Individual Habits Info Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/habits/individual/snapshot": {
      "post": {
        "tags": [
          "Individual Habits"
        ],
        "summary": "Create Progress Snapshot",
        "description": "Create a progress snapshot for trend tracking.\n\nThis is typically called automatically by the system, but can be\ntriggered manually for immediate snapshot creation.",
        "operationId": "create_progress_snapshot_habits_individual_snapshot_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Progress Snapshot Habits Individual Snapshot Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v2/analyze/document": {
      "post": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Analyze Document",
        "description": "Comprehensive document analysis with full ML pipeline.",
        "operationId": "analyze_document_api_v2_analyze_document_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/system/health": {
      "get": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Get System Health",
        "description": "Get comprehensive system health status.",
        "operationId": "get_system_health_api_v2_system_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/cache/stats": {
      "get": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Get Cache Stats",
        "description": "Get cache system statistics.",
        "operationId": "get_cache_stats_api_v2_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/cache/clear": {
      "post": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Clear Cache",
        "description": "Clear all cached results.",
        "operationId": "clear_cache_api_v2_cache_clear_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Clear Cache Api V2 Cache Clear Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/feedback/submit": {
      "post": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Submit Feedback",
        "description": "Submit human feedback for analysis improvement.",
        "operationId": "submit_feedback_api_v2_feedback_submit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/src__api__routers__unified_ml_api__FeedbackSubmissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Submit Feedback Api V2 Feedback Submit Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/education/learning-path": {
      "post": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Create Learning Path",
        "description": "Create personalized learning path.",
        "operationId": "create_learning_path_api_v2_education_learning_path_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/src__api__routers__unified_ml_api__LearningPathRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Learning Path Api V2 Education Learning Path Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/performance/metrics": {
      "get": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Get Performance Metrics",
        "description": "Get comprehensive performance metrics.",
        "operationId": "get_performance_metrics_api_v2_performance_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Performance Metrics Api V2 Performance Metrics Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Record Metric",
        "description": "Record a custom metric.",
        "operationId": "record_metric_api_v2_performance_metrics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Record Metric Api V2 Performance Metrics Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/audit/trail": {
      "get": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Get Audit Trail",
        "description": "Get filtered audit trail.",
        "operationId": "get_audit_trail_api_v2_audit_trail_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Audit Trail Api V2 Audit Trail Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/system/reset-metrics": {
      "post": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Reset System Metrics",
        "description": "Reset system metrics (admin only).",
        "operationId": "reset_system_metrics_api_v2_system_reset_metrics_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reset System Metrics Api V2 System Reset Metrics Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v2/health": {
      "get": {
        "tags": [
          "Unified ML API",
          "Unified ML API"
        ],
        "summary": "Health Check",
        "description": "Simple health check endpoint.",
        "operationId": "health_check_api_v2_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Api V2 Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/dashboard": {
      "get": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Get Dashboard Data",
        "description": "Get complete dashboard data.",
        "operationId": "get_dashboard_data_api_v2_performance_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/metrics/{metric_name}": {
      "get": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Get Metric Stats",
        "description": "Get statistics for a specific metric.",
        "operationId": "get_metric_stats_api_v2_performance_metrics__metric_name__get",
        "parameters": [
          {
            "name": "metric_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric Name"
            }
          },
          {
            "name": "time_window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 60,
              "title": "Time Window"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Metric Stats Api V2 Performance Metrics  Metric Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/alerts/rules": {
      "post": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Create Alert Rule",
        "description": "Create a new alert rule.",
        "operationId": "create_alert_rule_api_v2_performance_alerts_rules_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Alert Rule Api V2 Performance Alerts Rules Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/alerts/active": {
      "get": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Get Active Alerts",
        "description": "Get all active alerts.",
        "operationId": "get_active_alerts_api_v2_performance_alerts_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Active Alerts Api V2 Performance Alerts Active Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/alerts/{alert_id}/resolve": {
      "post": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Resolve Alert",
        "description": "Resolve an alert.",
        "operationId": "resolve_alert_api_v2_performance_alerts__alert_id__resolve_post",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Resolve Alert Api V2 Performance Alerts  Alert Id  Resolve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/performance/dashboard/html": {
      "get": {
        "tags": [
          "Performance Monitoring",
          "Performance Monitoring"
        ],
        "summary": "Get Dashboard Html",
        "description": "Get dashboard HTML page.",
        "operationId": "get_dashboard_html_api_v2_performance_dashboard_html_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/analyze": {
      "post": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Analyze Log Entry",
        "description": "Analyze a log entry for security threats.",
        "operationId": "analyze_log_entry_api_v2_security_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Analyze Log Entry Api V2 Security Analyze Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/metrics": {
      "get": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Get Security Metrics",
        "description": "Get security metrics.",
        "operationId": "get_security_metrics_api_v2_security_metrics_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24,
              "title": "Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Security Metrics Api V2 Security Metrics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/trends": {
      "get": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Get Threat Trends",
        "description": "Get threat trends.",
        "operationId": "get_threat_trends_api_v2_security_trends_get",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Threat Trends Api V2 Security Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/incidents": {
      "get": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Get Security Incidents",
        "description": "Get security incidents.",
        "operationId": "get_security_incidents_api_v2_security_incidents_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Security Incidents Api V2 Security Incidents Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/patterns": {
      "post": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Create Threat Pattern",
        "description": "Create a new threat pattern.",
        "operationId": "create_threat_pattern_api_v2_security_patterns_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreatPatternRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Threat Pattern Api V2 Security Patterns Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/reports/daily": {
      "get": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Get Daily Report",
        "description": "Get daily security report.",
        "operationId": "get_daily_report_api_v2_security_reports_daily_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Daily Report Api V2 Security Reports Daily Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/reports/compliance": {
      "get": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Get Compliance Report",
        "description": "Get compliance report.",
        "operationId": "get_compliance_report_api_v2_security_reports_compliance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Compliance Report Api V2 Security Reports Compliance Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/security/correlate": {
      "post": {
        "tags": [
          "Security Analysis",
          "Security Analysis"
        ],
        "summary": "Correlate Events",
        "description": "Correlate security events into incidents.",
        "operationId": "correlate_events_api_v2_security_correlate_post",
        "parameters": [
          {
            "name": "time_window_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24,
              "title": "Time Window Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Correlate Events Api V2 Security Correlate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ws/analysis/{task_id}": {
      "get": {
        "tags": [
          "WebSocket",
          "websocket"
        ],
        "summary": "Websocket Analysis Upgrade Hint",
        "description": "Hint clients that the analysis channel requires a WebSocket upgrade.",
        "operationId": "websocket_analysis_upgrade_hint_ws_analysis__task_id__get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/register": {
      "post": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Register Model",
        "description": "Register a new model.",
        "operationId": "register_model_api_v2_ml_models_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Register Model Api V2 Ml Models Register Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/versions": {
      "post": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Create Model Version",
        "description": "Create a new model version.",
        "operationId": "create_model_version_api_v2_ml_models_versions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelVersionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Model Version Api V2 Ml Models Versions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/deploy": {
      "post": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Deploy Model",
        "description": "Deploy a model version.",
        "operationId": "deploy_model_api_v2_ml_models_deploy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelDeploymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Deploy Model Api V2 Ml Models Deploy Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/performance": {
      "post": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Record Performance",
        "description": "Record model performance metrics.",
        "operationId": "record_performance_api_v2_ml_models_performance_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Record Performance Api V2 Ml Models Performance Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/models": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "List Models",
        "description": "List all registered models.",
        "operationId": "list_models_api_v2_ml_models_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Models Api V2 Ml Models Models Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/models/{model_id}": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Get Model Info",
        "description": "Get model information.",
        "operationId": "get_model_info_api_v2_ml_models_models__model_id__get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Model Info Api V2 Ml Models Models  Model Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/models/{model_id}/versions": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Get Model Versions",
        "description": "Get all versions of a model.",
        "operationId": "get_model_versions_api_v2_ml_models_models__model_id__versions_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Model Versions Api V2 Ml Models Models  Model Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/models/{model_id}/performance": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Get Model Performance",
        "description": "Get model performance history.",
        "operationId": "get_model_performance_api_v2_ml_models_models__model_id__performance_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24,
              "title": "Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Model Performance Api V2 Ml Models Models  Model Id  Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/models/{model_id}/drift": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Check Performance Drift",
        "description": "Check for performance drift.",
        "operationId": "check_performance_drift_api_v2_ml_models_models__model_id__drift_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Check Performance Drift Api V2 Ml Models Models  Model Id  Drift Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/deployments": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "List Deployments",
        "description": "List all model deployments.",
        "operationId": "list_deployments_api_v2_ml_models_deployments_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Deployments Api V2 Ml Models Deployments Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ml-models/performance/summary": {
      "get": {
        "tags": [
          "ML Model Management",
          "ML Model Management"
        ],
        "summary": "Get Performance Summary",
        "description": "Get performance summary for a model version.",
        "operationId": "get_performance_summary_api_v2_ml_models_performance_summary_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Performance Summary Api V2 Ml Models Performance Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/sync-status/{sync_id}": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Sync Status",
        "description": "Get detailed status of an EHR synchronization operation.\n\nArgs:\n    sync_id: Synchronization ID\n    current_user: Current authenticated user\n\nReturns:\n    Detailed sync status and metrics",
        "operationId": "get_sync_status_ehr_sync_status__sync_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sync_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sync Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EHRSyncResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/compliance-alerts": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Compliance Alerts",
        "description": "Get EHR compliance alerts with optional filtering.\n\nArgs:\n    severity: Filter by alert severity\n    acknowledged: Filter by acknowledgment status\n    limit: Maximum number of alerts to return\n    current_user: Current authenticated user\n\nReturns:\n    List of compliance alerts",
        "operationId": "get_compliance_alerts_ehr_compliance_alerts_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "acknowledged",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Acknowledged"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EHRComplianceAlert"
                  },
                  "title": "Response Get Compliance Alerts Ehr Compliance Alerts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/compliance-alerts/{alert_id}/acknowledge": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Acknowledge Compliance Alert",
        "description": "Acknowledge a compliance alert.\n\nArgs:\n    alert_id: Alert ID to acknowledge\n    current_user: Current authenticated user\n\nReturns:\n    Acknowledgment confirmation",
        "operationId": "acknowledge_compliance_alert_ehr_compliance_alerts__alert_id__acknowledge_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Acknowledge Compliance Alert Ehr Compliance Alerts  Alert Id  Acknowledge Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/data-quality-report": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Data Quality Report",
        "description": "Get comprehensive EHR data quality report.\n\nArgs:\n    time_range_days: Number of days to analyze\n    current_user: Current authenticated user\n\nReturns:\n    Data quality report",
        "operationId": "get_data_quality_report_ehr_data_quality_report_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Time Range Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EHRDataQualityReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/performance-metrics": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Ehr Performance Metrics",
        "description": "Get EHR integration performance metrics.\n\nArgs:\n    time_range_days: Number of days to analyze\n    current_user: Current authenticated user\n\nReturns:\n    Performance metrics",
        "operationId": "get_ehr_performance_metrics_ehr_performance_metrics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Time Range Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Ehr Performance Metrics Ehr Performance Metrics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/real-time-sync/enable": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Enable Real Time Sync",
        "description": "Enable real-time EHR data synchronization.\n\nArgs:\n    config: Real-time sync configuration\n    current_user: Current authenticated user\n\nReturns:\n    Real-time sync status",
        "operationId": "enable_real_time_sync_ehr_real_time_sync_enable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Config"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Enable Real Time Sync Ehr Real Time Sync Enable Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ehr/real-time-sync/disable": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Disable Real Time Sync",
        "description": "Disable real-time EHR data synchronization.\n\nArgs:\n    current_user: Current authenticated user\n\nReturns:\n    Real-time sync status",
        "operationId": "disable_real_time_sync_ehr_real_time_sync_disable_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Disable Real Time Sync Ehr Real Time Sync Disable Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ehr/supported-systems": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Supported Ehr Systems",
        "description": "Get list of supported EHR systems and their capabilities.\n\nReturns:\n    Supported EHR systems information",
        "operationId": "get_supported_ehr_systems_ehr_supported_systems_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Supported Ehr Systems Ehr Supported Systems Get"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/audit-trail": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Ehr Audit Trail",
        "description": "Get EHR integration audit trail.\n\nArgs:\n    start_date: Start date for audit trail\n    end_date: End date for audit trail\n    action_type: Filter by action type\n    limit: Maximum number of entries\n    current_user: Current authenticated user\n\nReturns:\n    Audit trail entries",
        "operationId": "get_ehr_audit_trail_ehr_audit_trail_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Ehr Audit Trail Ehr Audit Trail Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/connect": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Connect Ehr System",
        "description": "Connect to an EHR system and validate the connection.\n\nRequires admin privileges for security.",
        "operationId": "connect_ehr_system_ehr_connect_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EHRConnectionConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Connect Ehr System Ehr Connect Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ehr/status": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Ehr Connection Status",
        "description": "Get the current EHR connection status.",
        "operationId": "get_ehr_connection_status_ehr_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Ehr Connection Status Ehr Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ehr/sync": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Sync Ehr Data",
        "description": "Synchronize data from the connected EHR system.\n\nThis operation runs in the background to avoid timeout issues.",
        "operationId": "sync_ehr_data_ehr_sync_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EHRSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Sync Ehr Data Ehr Sync Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ehr/sync/{sync_task_id}/status": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Sync Status",
        "description": "Get the status of an EHR synchronization task.",
        "operationId": "get_sync_status_ehr_sync__sync_task_id__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sync_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sync Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Sync Status Ehr Sync  Sync Task Id  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/documents": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "List Ehr Documents",
        "description": "List documents synchronized from the EHR system.",
        "operationId": "list_ehr_documents_ehr_documents_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Document Type"
            }
          },
          {
            "name": "analyzed_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Analyzed Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Ehr Documents Ehr Documents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/documents/{document_id}/analyze": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Analyze Ehr Document",
        "description": "Analyze a specific EHR document for compliance.",
        "operationId": "analyze_ehr_document_ehr_documents__document_id__analyze_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Analyze Ehr Document Ehr Documents  Document Id  Analyze Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/analytics/compliance-trends": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Ehr Compliance Trends",
        "description": "Get compliance trends from EHR-synchronized documents.",
        "operationId": "get_ehr_compliance_trends_ehr_analytics_compliance_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days"
            }
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Ehr Compliance Trends Ehr Analytics Compliance Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ehr/disconnect": {
      "post": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Disconnect Ehr System",
        "description": "Disconnect from the current EHR system.",
        "operationId": "disconnect_ehr_system_ehr_disconnect_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Disconnect Ehr System Ehr Disconnect Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/ehr/supported-systems/summary": {
      "get": {
        "tags": [
          "EHR Integration",
          "EHR Integration"
        ],
        "summary": "Get Supported Ehr Systems Summary",
        "description": "Get summarized list of supported EHR systems.\n\nThis endpoint provides a concise list; see `/ehr/supported-systems` for detailed capabilities.",
        "operationId": "get_supported_ehr_systems_summary_ehr_supported_systems_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Supported Ehr Systems Summary Ehr Supported Systems Summary Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "summary": "Get Metrics",
        "description": "Get application performance metrics.",
        "operationId": "get_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/plugins/discover": {
      "get": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Discover Plugins",
        "description": "Discover available plugins in the configured directories.",
        "operationId": "discover_plugins_plugins_discover_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginDiscoveryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Discover Plugins Post",
        "description": "POST variant maintained for legacy clients expecting a form submission.",
        "operationId": "discover_plugins_post_plugins_discover_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginDiscoveryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins/": {
      "get": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "List Plugins",
        "description": "List all plugins with their current status.",
        "operationId": "list_plugins_plugins__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Plugins Plugins  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins/extension-points": {
      "get": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "List Extension Points",
        "description": "List all available extension points and their handlers.",
        "operationId": "list_extension_points_plugins_extension_points_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Extension Points Plugins Extension Points Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins/batch/load": {
      "post": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Batch Load Plugins",
        "description": "Execute batch plugin operations such as loading all available plugins.",
        "operationId": "batch_load_plugins_plugins_batch_load_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Batch Load Plugins Plugins Batch Load Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/plugins/batch/status/{task_id}": {
      "get": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Get Batch Status",
        "description": "Retrieve the status of a batch plugin operation.",
        "operationId": "get_batch_status_plugins_batch_status__task_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Batch Status Plugins Batch Status  Task Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/{plugin_name}": {
      "get": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Get Plugin Status",
        "description": "Get detailed status information for a specific plugin.",
        "operationId": "get_plugin_status_plugins__plugin_name__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plugin_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Plugin Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/{plugin_name}/status": {
      "get": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Get Plugin Status Legacy",
        "description": "Legacy alias for clients expecting /status suffix.",
        "operationId": "get_plugin_status_legacy_plugins__plugin_name__status_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plugin_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Plugin Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/{plugin_name}/load": {
      "post": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Load Plugin",
        "description": "Load a specific plugin with optional configuration.",
        "operationId": "load_plugin_plugins__plugin_name__load_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plugin_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Plugin Name"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PluginConfigRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Load Plugin Plugins  Plugin Name  Load Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/{plugin_name}/unload": {
      "post": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Unload Plugin",
        "description": "Unload a specific plugin.",
        "operationId": "unload_plugin_plugins__plugin_name__unload_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "plugin_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Plugin Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Unload Plugin Plugins  Plugin Name  Unload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/load-all": {
      "post": {
        "tags": [
          "Plugin Management",
          "Plugin Management"
        ],
        "summary": "Load All Plugins",
        "description": "Load all discovered plugins as a background task.",
        "operationId": "load_all_plugins_plugins_load_all_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Load All Plugins Plugins Load All Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/logs/stream": {
      "get": {
        "summary": "Logs Stream",
        "operationId": "logs_stream_logs_stream_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Read Root",
        "description": "Root endpoint providing API welcome message.",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlertRuleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Alert rule name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Alert rule description"
          },
          "metric_name": {
            "type": "string",
            "title": "Metric Name",
            "description": "Metric to monitor"
          },
          "condition": {
            "type": "string",
            "title": "Condition",
            "description": "Alert condition"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "description": "Alert severity",
            "default": "warning"
          },
          "cooldown_minutes": {
            "type": "integer",
            "title": "Cooldown Minutes",
            "description": "Cooldown period in minutes",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "metric_name",
          "condition"
        ],
        "title": "AlertRuleRequest",
        "description": "Request model for creating alert rules."
      },
      "AnalyticsRequest": {
        "properties": {
          "time_range": {
            "type": "string",
            "title": "Time Range",
            "description": "Time range for analytics",
            "default": "30d"
          },
          "metrics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Metrics",
            "description": "Metrics to include"
          },
          "filters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filters",
            "description": "Additional filters"
          },
          "granularity": {
            "type": "string",
            "title": "Granularity",
            "description": "Data granularity",
            "default": "daily"
          }
        },
        "type": "object",
        "title": "AnalyticsRequest",
        "description": "Analytics request model."
      },
      "AnalyticsResponse": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms"
          }
        },
        "type": "object",
        "required": [
          "data",
          "metadata",
          "generated_at",
          "processing_time_ms"
        ],
        "title": "AnalyticsResponse",
        "description": "Analytics response model."
      },
      "Body_analyze_document_analysis_analyze_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "discipline": {
            "type": "string",
            "title": "Discipline",
            "default": "pt"
          },
          "analysis_mode": {
            "type": "string",
            "title": "Analysis Mode",
            "default": "rubric"
          },
          "strictness": {
            "type": "string",
            "title": "Strictness",
            "default": "standard"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_analyze_document_analysis_analyze_post"
      },
      "Body_legacy_upload_document_upload_document_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_legacy_upload_document_upload_document_post"
      },
      "Body_login_for_access_token_auth_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_for_access_token_auth_token_post"
      },
      "Body_start_analysis_analysis_start_post": {
        "properties": {
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          },
          "document_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Name"
          },
          "discipline": {
            "type": "string",
            "title": "Discipline",
            "default": "pt"
          },
          "analysis_mode": {
            "type": "string",
            "title": "Analysis Mode",
            "default": "rubric"
          },
          "strictness": {
            "type": "string",
            "title": "Strictness",
            "default": "standard"
          },
          "rubric": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rubric"
          }
        },
        "type": "object",
        "title": "Body_start_analysis_analysis_start_post"
      },
      "CacheStatsResponse": {
        "properties": {
          "hits": {
            "type": "integer",
            "title": "Hits"
          },
          "misses": {
            "type": "integer",
            "title": "Misses"
          },
          "hit_rate": {
            "type": "number",
            "title": "Hit Rate"
          },
          "total_size_bytes": {
            "type": "integer",
            "title": "Total Size Bytes"
          },
          "tier_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Tier Distribution"
          },
          "operations": {
            "type": "integer",
            "title": "Operations"
          },
          "evictions": {
            "type": "integer",
            "title": "Evictions"
          }
        },
        "type": "object",
        "required": [
          "hits",
          "misses",
          "hit_rate",
          "total_size_bytes",
          "tier_distribution",
          "operations",
          "evictions"
        ],
        "title": "CacheStatsResponse",
        "description": "Cache statistics response model."
      },
      "ChatMessage": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "ChatMessage"
      },
      "ChatRequest": {
        "properties": {
          "history": {
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "type": "array",
            "title": "History"
          }
        },
        "type": "object",
        "required": [
          "history"
        ],
        "title": "ChatRequest"
      },
      "ChatResponse": {
        "properties": {
          "response": {
            "type": "string",
            "title": "Response"
          }
        },
        "type": "object",
        "required": [
          "response"
        ],
        "title": "ChatResponse"
      },
      "ClinicianHabitBreakdown": {
        "properties": {
          "clinician_name": {
            "type": "string",
            "title": "Clinician Name"
          },
          "habit_name": {
            "type": "string",
            "title": "Habit Name"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "clinician_name",
          "habit_name",
          "count"
        ],
        "title": "ClinicianHabitBreakdown"
      },
      "CoachingFocus": {
        "properties": {
          "focus_title": {
            "type": "string",
            "title": "Focus Title"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "root_cause": {
            "type": "string",
            "title": "Root Cause"
          },
          "action_steps": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Action Steps"
          }
        },
        "type": "object",
        "required": [
          "focus_title",
          "summary",
          "root_cause",
          "action_steps"
        ],
        "title": "CoachingFocus"
      },
      "CompetencyAssessmentRequest": {
        "properties": {
          "competency_area": {
            "type": "string",
            "title": "Competency Area",
            "description": "Competency area to assess"
          },
          "assessment_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Assessment Data",
            "description": "Assessment data"
          }
        },
        "type": "object",
        "required": [
          "competency_area",
          "assessment_data"
        ],
        "title": "CompetencyAssessmentRequest",
        "description": "Request model for competency assessments."
      },
      "CompetencyAssessmentResponse": {
        "properties": {
          "assessment_id": {
            "type": "string",
            "title": "Assessment Id"
          },
          "competency_area": {
            "type": "string",
            "title": "Competency Area"
          },
          "score": {
            "type": "number",
            "title": "Score"
          },
          "level_achieved": {
            "type": "string",
            "title": "Level Achieved"
          },
          "strengths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Strengths"
          },
          "improvement_areas": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Improvement Areas"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "assessment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Assessment Date"
          }
        },
        "type": "object",
        "required": [
          "assessment_id",
          "competency_area",
          "score",
          "level_achieved",
          "strengths",
          "improvement_areas",
          "recommendations",
          "assessment_date"
        ],
        "title": "CompetencyAssessmentResponse",
        "description": "Response model for competency assessments."
      },
      "ComplianceFindingModel": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/ComplianceRuleModel"
          },
          "text_snippet": {
            "type": "string",
            "title": "Text Snippet"
          },
          "risk_level": {
            "type": "string",
            "title": "Risk Level"
          }
        },
        "type": "object",
        "required": [
          "rule",
          "text_snippet",
          "risk_level"
        ],
        "title": "ComplianceFindingModel"
      },
      "ComplianceResultModel": {
        "properties": {
          "document": {
            "$ref": "#/components/schemas/TherapyDocumentRequest"
          },
          "findings": {
            "items": {
              "$ref": "#/components/schemas/ComplianceFindingModel"
            },
            "type": "array",
            "title": "Findings"
          },
          "is_compliant": {
            "type": "boolean",
            "title": "Is Compliant"
          }
        },
        "type": "object",
        "required": [
          "document",
          "findings",
          "is_compliant"
        ],
        "title": "ComplianceResultModel"
      },
      "ComplianceRuleModel": {
        "properties": {
          "uri": {
            "type": "string",
            "title": "Uri"
          },
          "severity": {
            "type": "string",
            "title": "Severity"
          },
          "strict_severity": {
            "type": "string",
            "title": "Strict Severity"
          },
          "issue_title": {
            "type": "string",
            "title": "Issue Title"
          },
          "issue_detail": {
            "type": "string",
            "title": "Issue Detail"
          },
          "issue_category": {
            "type": "string",
            "title": "Issue Category"
          },
          "discipline": {
            "type": "string",
            "title": "Discipline"
          },
          "document_type": {
            "type": "string",
            "title": "Document Type"
          },
          "suggestion": {
            "type": "string",
            "title": "Suggestion"
          },
          "financial_impact": {
            "type": "integer",
            "title": "Financial Impact"
          },
          "positive_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Positive Keywords"
          },
          "negative_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Negative Keywords"
          }
        },
        "type": "object",
        "required": [
          "uri",
          "severity",
          "strict_severity",
          "issue_title",
          "issue_detail",
          "issue_category",
          "discipline",
          "document_type",
          "suggestion",
          "financial_impact",
          "positive_keywords",
          "negative_keywords"
        ],
        "title": "ComplianceRuleModel"
      },
      "DashboardResponse": {
        "properties": {
          "widgets": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Widgets"
          },
          "metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metrics"
          },
          "active_alerts": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Active Alerts"
          },
          "alert_history": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Alert History"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "widgets",
          "metrics",
          "active_alerts",
          "alert_history",
          "timestamp"
        ],
        "title": "DashboardResponse",
        "description": "Response model for dashboard data."
      },
      "DataQualityLevel": {
        "type": "string",
        "enum": [
          "excellent",
          "good",
          "fair",
          "poor"
        ],
        "title": "DataQualityLevel",
        "description": "Data quality levels."
      },
      "DirectorDashboardData": {
        "properties": {
          "total_findings": {
            "type": "integer",
            "title": "Total Findings"
          },
          "team_habit_summary": {
            "items": {
              "$ref": "#/components/schemas/HabitSummary"
            },
            "type": "array",
            "title": "Team Habit Summary"
          },
          "clinician_habit_breakdown": {
            "items": {
              "$ref": "#/components/schemas/ClinicianHabitBreakdown"
            },
            "type": "array",
            "title": "Clinician Habit Breakdown"
          }
        },
        "type": "object",
        "required": [
          "total_findings",
          "team_habit_summary",
          "clinician_habit_breakdown"
        ],
        "title": "DirectorDashboardData"
      },
      "DocumentAnalysisRequest": {
        "properties": {
          "document_text": {
            "type": "string",
            "maxLength": 100000,
            "minLength": 1,
            "title": "Document Text",
            "description": "Document text to analyze"
          },
          "entities": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Entities",
            "description": "Pre-extracted entities"
          },
          "retrieved_rules": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Retrieved Rules",
            "description": "Retrieved compliance rules"
          },
          "context": {
            "additionalProperties": true,
            "type": "object",
            "title": "Context",
            "description": "Additional context"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "Processing priority",
            "default": "normal"
          },
          "timeout_seconds": {
            "type": "number",
            "maximum": 300.0,
            "minimum": 1.0,
            "title": "Timeout Seconds",
            "description": "Request timeout",
            "default": 30.0
          },
          "explanation_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation Types",
            "description": "Types of explanations to generate"
          }
        },
        "type": "object",
        "required": [
          "document_text"
        ],
        "title": "DocumentAnalysisRequest",
        "description": "Request model for document analysis."
      },
      "DocumentAnalysisResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "analysis_result": {
            "additionalProperties": true,
            "type": "object",
            "title": "Analysis Result"
          },
          "confidence_metrics": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Metrics"
          },
          "ensemble_result": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ensemble Result"
          },
          "bias_metrics": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bias Metrics"
          },
          "explanation_result": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation Result"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms"
          },
          "cache_hit": {
            "type": "boolean",
            "title": "Cache Hit",
            "default": false
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "analysis_result",
          "processing_time_ms",
          "timestamp"
        ],
        "title": "DocumentAnalysisResponse",
        "description": "Response model for document analysis."
      },
      "EHRComplianceAlert": {
        "properties": {
          "alert_id": {
            "type": "string",
            "title": "Alert Id"
          },
          "patient_id": {
            "type": "string",
            "title": "Patient Id"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "alert_type": {
            "type": "string",
            "title": "Alert Type"
          },
          "severity": {
            "type": "string",
            "title": "Severity"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "compliance_score": {
            "type": "number",
            "title": "Compliance Score"
          },
          "threshold": {
            "type": "number",
            "title": "Threshold"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "acknowledged": {
            "type": "boolean",
            "title": "Acknowledged",
            "default": false
          },
          "resolved": {
            "type": "boolean",
            "title": "Resolved",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "alert_id",
          "patient_id",
          "document_id",
          "alert_type",
          "severity",
          "message",
          "compliance_score",
          "threshold",
          "created_at"
        ],
        "title": "EHRComplianceAlert",
        "description": "EHR compliance alert."
      },
      "EHRConnectionConfig": {
        "properties": {
          "system_type": {
            "type": "string",
            "title": "System Type",
            "description": "EHR system type (epic, cerner, allscripts, athenahealth, nexhealth, generic_fhir)"
          },
          "endpoint_url": {
            "type": "string",
            "title": "Endpoint Url",
            "description": "EHR system API endpoint"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "OAuth client ID"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "OAuth client secret"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "description": "FHIR scopes",
            "default": "patient/*.read"
          },
          "facility_id": {
            "type": "string",
            "title": "Facility Id",
            "description": "Healthcare facility identifier"
          },
          "department_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Department Codes",
            "description": "Department codes to sync",
            "default": []
          },
          "sync_frequency_minutes": {
            "type": "integer",
            "title": "Sync Frequency Minutes",
            "description": "Automatic sync frequency in minutes",
            "default": 60
          },
          "enable_real_time_sync": {
            "type": "boolean",
            "title": "Enable Real Time Sync",
            "description": "Enable real-time data synchronization",
            "default": false
          },
          "data_retention_days": {
            "type": "integer",
            "title": "Data Retention Days",
            "description": "Data retention period in days",
            "default": 365
          },
          "compliance_threshold": {
            "type": "number",
            "title": "Compliance Threshold",
            "description": "Minimum compliance score threshold for alerts",
            "default": 0.8
          }
        },
        "type": "object",
        "required": [
          "system_type",
          "endpoint_url",
          "client_id",
          "client_secret",
          "facility_id"
        ],
        "title": "EHRConnectionConfig",
        "description": "Enhanced EHR connection configuration."
      },
      "EHRDataQualityReport": {
        "properties": {
          "report_id": {
            "type": "string",
            "title": "Report Id"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          },
          "overall_quality_score": {
            "type": "number",
            "title": "Overall Quality Score"
          },
          "quality_level": {
            "$ref": "#/components/schemas/DataQualityLevel"
          },
          "metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metrics"
          },
          "issues": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Issues"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "report_id",
          "generated_at",
          "overall_quality_score",
          "quality_level"
        ],
        "title": "EHRDataQualityReport",
        "description": "EHR data quality report."
      },
      "EHRSyncRequest": {
        "properties": {
          "patient_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Ids",
            "description": "Specific patient IDs to sync"
          },
          "date_range_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Range Start",
            "description": "Start date for data sync"
          },
          "date_range_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Range End",
            "description": "End date for data sync"
          },
          "document_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Document Types",
            "description": "Types of documents to sync",
            "default": [
              "progress_notes",
              "evaluations",
              "treatment_plans"
            ]
          },
          "auto_analyze": {
            "type": "boolean",
            "title": "Auto Analyze",
            "description": "Automatically analyze synced documents",
            "default": false
          },
          "sync_mode": {
            "type": "string",
            "title": "Sync Mode",
            "description": "Sync mode: incremental, full, or delta",
            "default": "incremental"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "Sync priority: low, normal, high, urgent",
            "default": "normal"
          },
          "validate_data_quality": {
            "type": "boolean",
            "title": "Validate Data Quality",
            "description": "Validate data quality during sync",
            "default": true
          }
        },
        "type": "object",
        "title": "EHRSyncRequest",
        "description": "Enhanced EHR data synchronization request."
      },
      "EHRSyncResult": {
        "properties": {
          "sync_id": {
            "type": "string",
            "title": "Sync Id"
          },
          "status": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "documents_synced": {
            "type": "integer",
            "title": "Documents Synced",
            "default": 0
          },
          "documents_failed": {
            "type": "integer",
            "title": "Documents Failed",
            "default": 0
          },
          "data_quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Quality Score"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "performance_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Performance Metrics"
          }
        },
        "type": "object",
        "required": [
          "sync_id",
          "status",
          "start_time"
        ],
        "title": "EHRSyncResult",
        "description": "EHR synchronization result."
      },
      "FeedbackAnalyticsResponse": {
        "properties": {
          "date_range": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Date Range"
          },
          "total_feedback": {
            "type": "integer",
            "title": "Total Feedback"
          },
          "feedback_by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Feedback By Type"
          },
          "feedback_by_priority": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Feedback By Priority"
          },
          "average_confidence": {
            "type": "number",
            "title": "Average Confidence"
          },
          "average_impact_score": {
            "type": "number",
            "title": "Average Impact Score"
          },
          "processing_stats": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Processing Stats"
          },
          "top_issues": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Top Issues"
          },
          "user_engagement": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "User Engagement"
          }
        },
        "type": "object",
        "required": [
          "date_range",
          "total_feedback",
          "feedback_by_type",
          "feedback_by_priority",
          "average_confidence",
          "average_impact_score",
          "processing_stats",
          "top_issues",
          "user_engagement"
        ],
        "title": "FeedbackAnalyticsResponse",
        "description": "Response model for feedback analytics."
      },
      "FeedbackAnnotation": {
        "properties": {
          "finding_id": {
            "type": "string",
            "title": "Finding Id"
          },
          "is_correct": {
            "type": "boolean",
            "title": "Is Correct"
          },
          "user_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_type": {
            "type": "string",
            "title": "Feedback Type",
            "default": "finding_accuracy"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "finding_id",
          "is_correct",
          "id",
          "user_id",
          "created_at"
        ],
        "title": "FeedbackAnnotation"
      },
      "FeedbackAnnotationCreate": {
        "properties": {
          "finding_id": {
            "type": "string",
            "title": "Finding Id"
          },
          "is_correct": {
            "type": "boolean",
            "title": "Is Correct"
          },
          "user_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_type": {
            "type": "string",
            "title": "Feedback Type",
            "default": "finding_accuracy"
          }
        },
        "type": "object",
        "required": [
          "finding_id",
          "is_correct"
        ],
        "title": "FeedbackAnnotationCreate"
      },
      "FeedbackItemResponse": {
        "properties": {
          "feedback_id": {
            "type": "string",
            "title": "Feedback Id"
          },
          "analysis_id": {
            "type": "string",
            "title": "Analysis Id"
          },
          "finding_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finding Id"
          },
          "feedback_type": {
            "type": "string",
            "title": "Feedback Type"
          },
          "priority": {
            "type": "string",
            "title": "Priority"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "original_finding": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Finding"
          },
          "suggested_correction": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Correction"
          },
          "confidence_rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Rating"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "processed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed By"
          },
          "processing_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Notes"
          },
          "impact_score": {
            "type": "number",
            "title": "Impact Score"
          }
        },
        "type": "object",
        "required": [
          "feedback_id",
          "analysis_id",
          "finding_id",
          "feedback_type",
          "priority",
          "content",
          "original_finding",
          "suggested_correction",
          "confidence_rating",
          "timestamp",
          "status",
          "processed_by",
          "processing_notes",
          "impact_score"
        ],
        "title": "FeedbackItemResponse",
        "description": "Response model for individual feedback items."
      },
      "FeedbackResponse": {
        "properties": {
          "feedback_id": {
            "type": "string",
            "title": "Feedback Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "feedback_id",
          "status",
          "message",
          "timestamp"
        ],
        "title": "FeedbackResponse",
        "description": "Response model for feedback operations."
      },
      "Finding": {
        "properties": {
          "rule_id": {
            "type": "string",
            "title": "Rule Id"
          },
          "risk": {
            "type": "string",
            "title": "Risk"
          },
          "personalized_tip": {
            "type": "string",
            "title": "Personalized Tip"
          },
          "problematic_text": {
            "type": "string",
            "title": "Problematic Text"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score",
            "default": 0.0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "report_id": {
            "type": "integer",
            "title": "Report Id"
          }
        },
        "type": "object",
        "required": [
          "rule_id",
          "risk",
          "personalized_tip",
          "problematic_text",
          "id",
          "report_id"
        ],
        "title": "Finding"
      },
      "FindingSummary": {
        "properties": {
          "rule_id": {
            "type": "string",
            "title": "Rule Id"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "rule_id",
          "count"
        ],
        "title": "FindingSummary"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HabitAchievement": {
        "properties": {
          "achievement_id": {
            "type": "string",
            "title": "Achievement Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "default": "\ud83c\udfc6"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "earned_at": {
            "type": "string",
            "format": "date-time",
            "title": "Earned At"
          }
        },
        "type": "object",
        "required": [
          "achievement_id",
          "title",
          "description",
          "category",
          "id",
          "user_id",
          "earned_at"
        ],
        "title": "HabitAchievement",
        "description": "Schema for habit achievement responses."
      },
      "HabitGoal": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "habit_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Habit Number"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "target_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "current_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Value"
          },
          "progress": {
            "type": "integer",
            "title": "Progress"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "user_id",
          "progress",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "HabitGoal",
        "description": "Schema for habit goal responses."
      },
      "HabitGoalCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "habit_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Habit Number"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "target_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Date"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "HabitGoalCreate",
        "description": "Schema for creating habit goals."
      },
      "HabitProgressData": {
        "properties": {
          "total_findings": {
            "type": "integer",
            "title": "Total Findings"
          },
          "analysis_period_days": {
            "type": "integer",
            "title": "Analysis Period Days"
          },
          "habit_breakdown": {
            "additionalProperties": true,
            "type": "object",
            "title": "Habit Breakdown"
          },
          "focus_areas": {
            "items": {
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "additionalProperties": true,
                  "type": "object"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Focus Areas"
          },
          "mastered_habits": {
            "items": {
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "additionalProperties": true,
                  "type": "object"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Mastered Habits"
          },
          "weekly_trends": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Weekly Trends"
          },
          "improvement_rate": {
            "type": "number",
            "title": "Improvement Rate"
          },
          "current_streak": {
            "type": "integer",
            "title": "Current Streak"
          },
          "consistency_score": {
            "type": "number",
            "title": "Consistency Score"
          },
          "overall_progress": {
            "additionalProperties": true,
            "type": "object",
            "title": "Overall Progress"
          },
          "achievements": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Achievements"
          },
          "current_goals": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Current Goals"
          },
          "recommendations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "total_findings",
          "analysis_period_days",
          "habit_breakdown",
          "focus_areas",
          "mastered_habits",
          "weekly_trends",
          "improvement_rate",
          "current_streak",
          "consistency_score",
          "overall_progress",
          "achievements",
          "current_goals",
          "recommendations"
        ],
        "title": "HabitProgressData",
        "description": "Schema for individual habit progression data."
      },
      "HabitRecommendation": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "priority": {
            "type": "string",
            "title": "Priority"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "action_items": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Action Items"
          },
          "habit_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Habit Number"
          }
        },
        "type": "object",
        "required": [
          "type",
          "priority",
          "title",
          "description",
          "action_items"
        ],
        "title": "HabitRecommendation",
        "description": "Schema for habit recommendations."
      },
      "HabitSummary": {
        "properties": {
          "habit_name": {
            "type": "string",
            "title": "Habit Name"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "habit_name",
          "count"
        ],
        "title": "HabitSummary"
      },
      "HabitTrendPoint": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "date",
          "count"
        ],
        "title": "HabitTrendPoint"
      },
      "LearningCompletionRequest": {
        "properties": {
          "completion_percentage": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Completion Percentage",
            "description": "Completion percentage"
          },
          "quiz_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiz Score",
            "description": "Quiz score"
          },
          "competency_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Competency Rating",
            "description": "Competency rating"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback",
            "description": "User feedback"
          }
        },
        "type": "object",
        "required": [
          "completion_percentage"
        ],
        "title": "LearningCompletionRequest",
        "description": "Request model for completing learning sessions."
      },
      "LearningDashboardResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "competencies": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Competencies"
          },
          "learning_statistics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Learning Statistics"
          },
          "recent_progress": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Recent Progress"
          },
          "learning_paths": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Learning Paths"
          },
          "recent_assessments": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Recent Assessments"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "competencies",
          "learning_statistics",
          "recent_progress",
          "learning_paths",
          "recent_assessments",
          "recommendations"
        ],
        "title": "LearningDashboardResponse",
        "description": "Response model for learning dashboard."
      },
      "LearningPathResponse": {
        "properties": {
          "path_id": {
            "type": "string",
            "title": "Path Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "competency_focus": {
            "type": "string",
            "title": "Competency Focus"
          },
          "learning_level": {
            "type": "string",
            "title": "Learning Level"
          },
          "objectives_count": {
            "type": "integer",
            "title": "Objectives Count"
          },
          "content_items_count": {
            "type": "integer",
            "title": "Content Items Count"
          },
          "estimated_completion_hours": {
            "type": "number",
            "title": "Estimated Completion Hours"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage"
          }
        },
        "type": "object",
        "required": [
          "path_id",
          "title",
          "description",
          "competency_focus",
          "learning_level",
          "objectives_count",
          "content_items_count",
          "estimated_completion_hours",
          "progress_percentage"
        ],
        "title": "LearningPathResponse",
        "description": "Response model for learning paths."
      },
      "LearningSessionRequest": {
        "properties": {
          "content_id": {
            "type": "string",
            "title": "Content Id",
            "description": "Content ID to learn"
          },
          "learning_path_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Learning Path Id",
            "description": "Optional learning path ID"
          }
        },
        "type": "object",
        "required": [
          "content_id"
        ],
        "title": "LearningSessionRequest",
        "description": "Request model for starting learning sessions."
      },
      "LearningSessionResponse": {
        "properties": {
          "progress_id": {
            "type": "string",
            "title": "Progress Id"
          },
          "content_id": {
            "type": "string",
            "title": "Content Id"
          },
          "learning_path_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Learning Path Id"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "content_title": {
            "type": "string",
            "title": "Content Title"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes"
          }
        },
        "type": "object",
        "required": [
          "progress_id",
          "content_id",
          "learning_path_id",
          "started_at",
          "content_title",
          "content_type",
          "duration_minutes"
        ],
        "title": "LearningSessionResponse",
        "description": "Response model for learning sessions."
      },
      "LegacyAnalysisRequest": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "rubric_id": {
            "type": "string",
            "title": "Rubric Id"
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type",
            "default": "comprehensive"
          },
          "discipline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discipline"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "rubric_id"
        ],
        "title": "LegacyAnalysisRequest"
      },
      "LogAnalysisRequest": {
        "properties": {
          "log_entry": {
            "type": "string",
            "title": "Log Entry",
            "description": "Log entry to analyze"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "required": [
          "log_entry"
        ],
        "title": "LogAnalysisRequest",
        "description": "Request model for log analysis."
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest",
        "description": "JSON login request model for Electron app and JSON clients."
      },
      "MetricRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Metric name"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Metric value"
          },
          "metric_type": {
            "type": "string",
            "title": "Metric Type",
            "description": "Metric type",
            "default": "gauge"
          },
          "tags": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Metric tags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metric metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "MetricRequest",
        "description": "Request model for recording metrics."
      },
      "ModelDeploymentRequest": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Model ID"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Version to deploy"
          },
          "strategy": {
            "type": "string",
            "title": "Strategy",
            "description": "Deployment strategy",
            "default": "blue_green"
          },
          "traffic_percentage": {
            "type": "number",
            "title": "Traffic Percentage",
            "description": "Traffic percentage",
            "default": 100.0
          },
          "deployment_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Deployment Config",
            "description": "Deployment configuration"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "version"
        ],
        "title": "ModelDeploymentRequest",
        "description": "Request model for model deployment."
      },
      "ModelRegistrationRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Model name"
          },
          "model_type": {
            "type": "string",
            "title": "Model Type",
            "description": "Model type"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Model description",
            "default": ""
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Model tags"
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "description": "Creator",
            "default": ""
          },
          "framework": {
            "type": "string",
            "title": "Framework",
            "description": "ML framework",
            "default": ""
          },
          "hyperparameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Hyperparameters",
            "description": "Hyperparameters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "model_type"
        ],
        "title": "ModelRegistrationRequest",
        "description": "Request model for model registration."
      },
      "ModelVersionRequest": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Model ID"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Version string"
          },
          "performance_metrics": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Performance Metrics",
            "description": "Performance metrics"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "version"
        ],
        "title": "ModelVersionRequest",
        "description": "Request model for creating model version."
      },
      "PasswordStrengthRequest": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Password to validate"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "PasswordStrengthRequest",
        "description": "Password strength validation request."
      },
      "PasswordStrengthResponse": {
        "properties": {
          "is_strong": {
            "type": "boolean",
            "title": "Is Strong",
            "description": "Whether password is strong"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "description": "Password strength errors"
          },
          "score": {
            "type": "integer",
            "title": "Score",
            "description": "Password strength score (0-100)"
          }
        },
        "type": "object",
        "required": [
          "is_strong",
          "errors",
          "score"
        ],
        "title": "PasswordStrengthResponse",
        "description": "Password strength validation response."
      },
      "PasswordUpdate": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "PasswordUpdate"
      },
      "PerformanceRecordRequest": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Model ID"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Version"
          },
          "accuracy": {
            "type": "number",
            "title": "Accuracy",
            "description": "Accuracy",
            "default": 0.0
          },
          "precision": {
            "type": "number",
            "title": "Precision",
            "description": "Precision",
            "default": 0.0
          },
          "recall": {
            "type": "number",
            "title": "Recall",
            "description": "Recall",
            "default": 0.0
          },
          "f1_score": {
            "type": "number",
            "title": "F1 Score",
            "description": "F1 score",
            "default": 0.0
          },
          "inference_time_ms": {
            "type": "number",
            "title": "Inference Time Ms",
            "description": "Inference time",
            "default": 0.0
          },
          "custom_metrics": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Custom Metrics",
            "description": "Custom metrics"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "version"
        ],
        "title": "PerformanceRecordRequest",
        "description": "Request model for recording performance."
      },
      "PluginBatchRequest": {
        "properties": {
          "operation": {
            "type": "string",
            "title": "Operation",
            "description": "Batch operation to perform"
          }
        },
        "type": "object",
        "required": [
          "operation"
        ],
        "title": "PluginBatchRequest",
        "description": "Batch plugin operation request."
      },
      "PluginConfigRequest": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether the plugin is enabled",
            "default": true
          },
          "settings": {
            "additionalProperties": true,
            "type": "object",
            "title": "Settings",
            "description": "Plugin-specific settings"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "Plugin priority (lower = higher priority)",
            "default": 100
          },
          "auto_load": {
            "type": "boolean",
            "title": "Auto Load",
            "description": "Whether to auto-load on startup",
            "default": true
          }
        },
        "type": "object",
        "title": "PluginConfigRequest",
        "description": "Plugin configuration request."
      },
      "PluginDiscoveryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": true
          },
          "total_discovered": {
            "type": "integer",
            "title": "Total Discovered"
          },
          "discovered_plugins": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Discovered Plugins"
          },
          "discovery_paths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Discovery Paths"
          }
        },
        "type": "object",
        "required": [
          "total_discovered",
          "discovered_plugins",
          "discovery_paths"
        ],
        "title": "PluginDiscoveryResponse",
        "description": "Plugin discovery response."
      },
      "PluginStatusResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "discovered": {
            "type": "boolean",
            "title": "Discovered"
          },
          "loaded": {
            "type": "boolean",
            "title": "Loaded"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "extension_points": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Extension Points"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "discovered",
          "loaded",
          "enabled"
        ],
        "title": "PluginStatusResponse",
        "description": "Plugin status response."
      },
      "Report": {
        "properties": {
          "document_name": {
            "type": "string",
            "title": "Document Name"
          },
          "compliance_score": {
            "type": "number",
            "title": "Compliance Score"
          },
          "analysis_result": {
            "additionalProperties": true,
            "type": "object",
            "title": "Analysis Result"
          },
          "document_embedding": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Embedding"
          },
          "document_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Type"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "analysis_date": {
            "type": "string",
            "format": "date-time",
            "title": "Analysis Date"
          },
          "findings": {
            "items": {
              "$ref": "#/components/schemas/Finding"
            },
            "type": "array",
            "title": "Findings",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "document_name",
          "compliance_score",
          "analysis_result",
          "id",
          "analysis_date"
        ],
        "title": "Report"
      },
      "RubricCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "discipline": {
            "type": "string",
            "title": "Discipline"
          },
          "regulation": {
            "type": "string",
            "title": "Regulation"
          },
          "common_pitfalls": {
            "type": "string",
            "title": "Common Pitfalls"
          },
          "best_practice": {
            "type": "string",
            "title": "Best Practice"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "name",
          "discipline",
          "regulation",
          "common_pitfalls",
          "best_practice"
        ],
        "title": "RubricCreate"
      },
      "RubricListResponse": {
        "properties": {
          "rubrics": {
            "items": {
              "$ref": "#/components/schemas/RubricPublic"
            },
            "type": "array",
            "title": "Rubrics"
          }
        },
        "type": "object",
        "required": [
          "rubrics"
        ],
        "title": "RubricListResponse"
      },
      "RubricPublic": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "discipline": {
            "type": "string",
            "title": "Discipline"
          },
          "regulation": {
            "type": "string",
            "title": "Regulation"
          },
          "common_pitfalls": {
            "type": "string",
            "title": "Common Pitfalls"
          },
          "best_practice": {
            "type": "string",
            "title": "Best Practice"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "value": {
            "type": "integer",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "discipline",
          "regulation",
          "common_pitfalls",
          "best_practice",
          "id",
          "value"
        ],
        "title": "RubricPublic"
      },
      "SecurityEventRequest": {
        "properties": {
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Type of security event"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "description": "Event severity"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Event description"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details",
            "description": "Additional event details"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "severity",
          "description"
        ],
        "title": "SecurityEventRequest",
        "description": "Security event logging request."
      },
      "SecurityStatusResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Security status"
          },
          "threats_detected": {
            "type": "integer",
            "title": "Threats Detected",
            "description": "Number of threats detected"
          },
          "blocked_ips": {
            "type": "integer",
            "title": "Blocked Ips",
            "description": "Number of blocked IPs"
          },
          "security_events": {
            "type": "integer",
            "title": "Security Events",
            "description": "Number of security events"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "status",
          "threats_detected",
          "blocked_ips",
          "security_events",
          "last_updated"
        ],
        "title": "SecurityStatusResponse",
        "description": "Security status response."
      },
      "SessionCreateRequest": {
        "properties": {
          "client_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Client Info"
          }
        },
        "type": "object",
        "required": [
          "client_info"
        ],
        "title": "SessionCreateRequest",
        "description": "Request model for creating a session."
      },
      "SessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "created_at": {
            "type": "number",
            "title": "Created At"
          },
          "last_activity": {
            "type": "number",
            "title": "Last Activity"
          },
          "expires_at": {
            "type": "number",
            "title": "Expires At"
          },
          "client_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Client Info"
          },
          "refresh_count": {
            "type": "integer",
            "title": "Refresh Count"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "created_at",
          "last_activity",
          "expires_at",
          "client_info",
          "refresh_count"
        ],
        "title": "SessionResponse",
        "description": "Response model for session data."
      },
      "SessionStatsResponse": {
        "properties": {
          "active_sessions": {
            "type": "integer",
            "title": "Active Sessions"
          },
          "total_sessions": {
            "type": "integer",
            "title": "Total Sessions"
          },
          "unique_users": {
            "type": "integer",
            "title": "Unique Users"
          },
          "max_sessions_per_user": {
            "type": "integer",
            "title": "Max Sessions Per User"
          },
          "session_timeout_minutes": {
            "type": "integer",
            "title": "Session Timeout Minutes"
          }
        },
        "type": "object",
        "required": [
          "active_sessions",
          "total_sessions",
          "unique_users",
          "max_sessions_per_user",
          "session_timeout_minutes"
        ],
        "title": "SessionStatsResponse",
        "description": "Response model for session statistics."
      },
      "SyncStatus": {
        "type": "string",
        "enum": [
          "pending",
          "in_progress",
          "completed",
          "failed",
          "partial"
        ],
        "title": "SyncStatus",
        "description": "EHR sync status."
      },
      "SystemHealthResponse": {
        "properties": {
          "overall_status": {
            "type": "string",
            "title": "Overall Status"
          },
          "components": {
            "additionalProperties": true,
            "type": "object",
            "title": "Components"
          },
          "metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metrics"
          },
          "circuit_breakers": {
            "additionalProperties": true,
            "type": "object",
            "title": "Circuit Breakers"
          },
          "performance": {
            "additionalProperties": true,
            "type": "object",
            "title": "Performance"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "overall_status",
          "components",
          "metrics",
          "circuit_breakers",
          "performance",
          "timestamp"
        ],
        "title": "SystemHealthResponse",
        "description": "System health response model."
      },
      "TherapyDocumentRequest": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "discipline": {
            "type": "string",
            "title": "Discipline"
          },
          "document_type": {
            "type": "string",
            "title": "Document Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "text",
          "discipline",
          "document_type"
        ],
        "title": "TherapyDocumentRequest"
      },
      "ThreatDetectionRequest": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data",
            "description": "Data to analyze for threats"
          },
          "sensitivity": {
            "type": "string",
            "title": "Sensitivity",
            "description": "Detection sensitivity",
            "default": "medium"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ThreatDetectionRequest",
        "description": "Threat detection request."
      },
      "ThreatDetectionResponse": {
        "properties": {
          "threats_detected": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Threats Detected",
            "description": "Detected threats"
          },
          "risk_level": {
            "type": "string",
            "title": "Risk Level",
            "description": "Risk level"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "Security recommendations"
          }
        },
        "type": "object",
        "required": [
          "threats_detected",
          "risk_level",
          "recommendations"
        ],
        "title": "ThreatDetectionResponse",
        "description": "Threat detection response."
      },
      "ThreatPatternRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Pattern name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Pattern description"
          },
          "pattern_type": {
            "type": "string",
            "title": "Pattern Type",
            "description": "Pattern type"
          },
          "pattern_value": {
            "type": "string",
            "title": "Pattern Value",
            "description": "Pattern value"
          },
          "threat_level": {
            "type": "string",
            "title": "Threat Level",
            "description": "Threat level",
            "default": "medium"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "pattern_type",
          "pattern_value"
        ],
        "title": "ThreatPatternRequest",
        "description": "Request model for creating threat patterns."
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserPreferences"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "username",
          "id",
          "is_active"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          },
          "license_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Key"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserPasswordChange": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UserPasswordChange"
      },
      "UserPreferences": {
        "properties": {
          "theme_mode": {
            "type": "string",
            "enum": [
              "system",
              "light",
              "dark"
            ],
            "title": "Theme Mode",
            "default": "system"
          },
          "startup_screen": {
            "type": "string",
            "enum": [
              "analysis",
              "dashboard",
              "mission_control"
            ],
            "title": "Startup Screen",
            "default": "analysis"
          },
          "enable_beta_widgets": {
            "type": "boolean",
            "title": "Enable Beta Widgets",
            "default": true
          },
          "auto_start_backend": {
            "type": "boolean",
            "title": "Auto Start Backend",
            "default": false
          },
          "stream_analysis_logs": {
            "type": "boolean",
            "title": "Stream Analysis Logs",
            "default": true
          },
          "default_strictness": {
            "type": "string",
            "enum": [
              "lenient",
              "standard",
              "strict"
            ],
            "title": "Default Strictness",
            "default": "standard"
          },
          "auto_export_format": {
            "type": "string",
            "enum": [
              "pdf",
              "pdf_html"
            ],
            "title": "Auto Export Format",
            "default": "pdf_html"
          }
        },
        "type": "object",
        "title": "UserPreferences"
      },
      "UserPreferencesUpdate": {
        "properties": {
          "theme_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "system",
                  "light",
                  "dark"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Mode"
          },
          "startup_screen": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "analysis",
                  "dashboard",
                  "mission_control"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Startup Screen"
          },
          "enable_beta_widgets": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Beta Widgets"
          },
          "auto_start_backend": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Start Backend"
          },
          "stream_analysis_logs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream Analysis Logs"
          },
          "default_strictness": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "lenient",
                  "standard",
                  "strict"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Strictness"
          },
          "auto_export_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pdf",
                  "pdf_html"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Export Format"
          }
        },
        "type": "object",
        "title": "UserPreferencesUpdate"
      },
      "UserProgressSummary": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "overall_progress_percentage": {
            "type": "number",
            "title": "Overall Progress Percentage"
          },
          "overall_status": {
            "type": "string",
            "title": "Overall Status"
          },
          "current_streak": {
            "type": "integer",
            "title": "Current Streak"
          },
          "total_analyses": {
            "type": "integer",
            "title": "Total Analyses"
          },
          "mastered_habits_count": {
            "type": "integer",
            "title": "Mastered Habits Count"
          },
          "active_goals_count": {
            "type": "integer",
            "title": "Active Goals Count"
          },
          "recent_achievements": {
            "items": {
              "$ref": "#/components/schemas/HabitAchievement"
            },
            "type": "array",
            "title": "Recent Achievements"
          },
          "next_milestone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Milestone"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "overall_progress_percentage",
          "overall_status",
          "current_streak",
          "total_analyses",
          "mastered_habits_count",
          "active_goals_count",
          "recent_achievements"
        ],
        "title": "UserProgressSummary",
        "description": "Schema for user progress summary."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WeeklyHabitTrend": {
        "properties": {
          "week_start": {
            "type": "string",
            "title": "Week Start"
          },
          "week_end": {
            "type": "string",
            "title": "Week End"
          },
          "total_findings": {
            "type": "integer",
            "title": "Total Findings"
          },
          "habit_breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Habit Breakdown"
          },
          "avg_confidence": {
            "type": "number",
            "title": "Avg Confidence"
          }
        },
        "type": "object",
        "required": [
          "week_start",
          "week_end",
          "total_findings",
          "habit_breakdown",
          "avg_confidence"
        ],
        "title": "WeeklyHabitTrend",
        "description": "Schema for weekly habit trend data."
      },
      "src__api__routers__education__LearningPathRequest": {
        "properties": {
          "competency_focus": {
            "type": "string",
            "title": "Competency Focus",
            "description": "Primary competency area"
          },
          "learning_level": {
            "type": "string",
            "title": "Learning Level",
            "description": "User's learning level"
          },
          "analysis_findings": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Findings",
            "description": "Recent analysis findings"
          }
        },
        "type": "object",
        "required": [
          "competency_focus",
          "learning_level"
        ],
        "title": "LearningPathRequest",
        "description": "Request model for creating learning paths."
      },
      "src__api__routers__feedback__FeedbackSubmissionRequest": {
        "properties": {
          "analysis_id": {
            "type": "string",
            "title": "Analysis Id",
            "description": "ID of the analysis being feedback on"
          },
          "feedback_type": {
            "type": "string",
            "title": "Feedback Type",
            "description": "Type of feedback"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Feedback content"
          },
          "finding_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finding Id",
            "description": "Specific finding ID"
          },
          "original_finding": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Finding",
            "description": "Original AI finding"
          },
          "suggested_correction": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Correction",
            "description": "Suggested correction"
          },
          "confidence_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Rating",
            "description": "User's confidence in feedback"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "Priority level",
            "default": "medium"
          }
        },
        "type": "object",
        "required": [
          "analysis_id",
          "feedback_type",
          "content"
        ],
        "title": "FeedbackSubmissionRequest",
        "description": "Request model for submitting feedback."
      },
      "src__api__routers__unified_ml_api__FeedbackSubmissionRequest": {
        "properties": {
          "analysis_id": {
            "type": "string",
            "title": "Analysis Id",
            "description": "ID of the analysis being feedback on"
          },
          "finding_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finding Id",
            "description": "Specific finding ID"
          },
          "feedback_type": {
            "type": "string",
            "title": "Feedback Type",
            "description": "Type of feedback"
          },
          "content": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 1,
            "title": "Content",
            "description": "Feedback content"
          },
          "confidence_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Rating",
            "description": "User confidence in feedback"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "Feedback priority",
            "default": "medium"
          }
        },
        "type": "object",
        "required": [
          "analysis_id",
          "feedback_type",
          "content"
        ],
        "title": "FeedbackSubmissionRequest",
        "description": "Request model for feedback submission."
      },
      "src__api__routers__unified_ml_api__LearningPathRequest": {
        "properties": {
          "competency_focus": {
            "type": "string",
            "title": "Competency Focus",
            "description": "Primary competency area"
          },
          "learning_level": {
            "type": "string",
            "title": "Learning Level",
            "description": "User's learning level"
          },
          "analysis_findings": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Findings",
            "description": "Recent analysis findings"
          }
        },
        "type": "object",
        "required": [
          "competency_focus",
          "learning_level"
        ],
        "title": "LearningPathRequest",
        "description": "Request model for learning path creation."
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "User-friendly error message"
          },
          "error_id": {
            "type": "string",
            "description": "Unique error identifier for tracking"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Error timestamp"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Suggested solutions"
          }
        },
        "required": [
          "error",
          "error_id",
          "timestamp"
        ]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "data": {
            "type": "object",
            "description": "Response data"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Response timestamp"
          }
        },
        "required": [
          "message",
          "timestamp"
        ]
      },
      "AnalysisRequest": {
        "type": "object",
        "properties": {
          "document_name": {
            "type": "string",
            "description": "Name of the document"
          },
          "rubric": {
            "type": "string",
            "description": "Compliance rubric to use"
          },
          "strictness": {
            "type": "string",
            "enum": [
              "lenient",
              "standard",
              "strict"
            ],
            "description": "Analysis strictness level"
          },
          "discipline": {
            "type": "string",
            "enum": [
              "pt",
              "ot",
              "slp"
            ],
            "description": "Clinical discipline"
          }
        },
        "required": [
          "document_name",
          "rubric"
        ]
      },
      "AnalysisResponse": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "Unique task identifier"
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "running",
              "completed",
              "failed"
            ],
            "description": "Analysis status"
          },
          "progress": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Progress percentage"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": [
          "task_id",
          "status"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /auth/login endpoint"
      },
      "WebSocketAuth": {
        "type": "apiKey",
        "in": "query",
        "name": "token",
        "description": "JWT token for WebSocket authentication"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": "Authentication failed",
              "error_id": "auth_001",
              "timestamp": "2024-01-01T00:00:00Z",
              "suggestions": [
                "Check JWT token validity",
                "Ensure proper authentication headers"
              ]
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": "There was an issue with the data you provided",
              "error_id": "val_001",
              "timestamp": "2024-01-01T00:00:00Z",
              "suggestions": [
                "Review input data format",
                "Check required fields"
              ]
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": "A system error occurred",
              "error_id": "sys_001",
              "timestamp": "2024-01-01T00:00:00Z",
              "suggestions": [
                "Try again later",
                "Contact support if issue persists"
              ]
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://127.0.0.1:8001",
      "description": "Development server"
    },
    {
      "url": "https://api.therapyanalyzer.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Analysis",
      "description": "Document analysis and compliance checking"
    },
    {
      "name": "Dashboard",
      "description": "Analytics and reporting dashboard"
    },
    {
      "name": "Health",
      "description": "System health monitoring and diagnostics"
    },
    {
      "name": "WebSocket",
      "description": "Real-time communication endpoints"
    },
    {
      "name": "Admin",
      "description": "Administrative functions"
    },
    {
      "name": "Users",
      "description": "User management"
    },
    {
      "name": "Rubrics",
      "description": "Compliance rubric management"
    },
    {
      "name": "Habits",
      "description": "Habit tracking and analytics"
    },
    {
      "name": "Advanced Analytics",
      "description": "Advanced analytics and insights"
    },
    {
      "name": "Meta Analytics",
      "description": "Meta-level analytics and system metrics"
    },
    {
      "name": "Strictness",
      "description": "Analysis strictness configuration"
    }
  ]
}